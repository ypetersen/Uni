<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
const int N = 5;
int array[N];
int wIdx = 0;
int rIdx = 0;


int tmpData;
int readData;

urgent chan writeEvent;
urgent chan readEvent;</declaration><template><name>Reader</name><location id="id0" x="-544" y="-136"><name x="-560" y="-168">READ</name></location><location id="id1" x="-816" y="-136"><name x="-856" y="-168">START_READ</name></location><init ref="id1"/><transition><source ref="id0"/><target ref="id1"/><label kind="assignment" x="-773" y="-68">rIdx = (rIdx + 1) % N</label><nail x="-680" y="-68"/></transition><transition><source ref="id1"/><target ref="id0"/><label kind="guard" x="-728" y="-184">wIdx != rIdx</label><label kind="synchronisation" x="-728" y="-168">readEvent!</label><label kind="assignment" x="-752" y="-152">readData = array[rIdx]</label></transition></template><template><name x="8" y="8">Writer</name><declaration>// Place local declarations here.
int wNew;</declaration><location id="id2" x="-672" y="-384"><name x="-696" y="-368">WRITE</name></location><location id="id3" x="-512" y="-512"><name x="-536" y="-544">START_WRITE</name></location><location id="id4" x="-832" y="-512"><name x="-928" y="-544">PREPARE_NEW_INDEX</name></location><init ref="id4"/><transition><source ref="id2"/><target ref="id4"/><label kind="assignment" x="-792" y="-464">wIdx = wNew</label></transition><transition><source ref="id3"/><target ref="id2"/><label kind="select" x="-576" y="-424">i : int[0,10]</label><label kind="guard" x="-576" y="-440">wNew != rIdx</label><label kind="synchronisation" x="-576" y="-456">writeEvent!</label><label kind="assignment" x="-576" y="-408">tmpData = i,
array[wIdx] = i</label></transition><transition><source ref="id4"/><target ref="id3"/><label kind="assignment" x="-744" y="-536">wNew = (wIdx + 1) % N</label></transition></template><template><name>Watchdog</name><declaration>int check[N];

int rIdxControl = 0;
int wIdxControl = 0;</declaration><location id="id5" x="-128" y="-608"><name x="-152" y="-640">ERROR</name></location><location id="id6" x="160" y="-448"><name x="136" y="-480">CHECK_READ</name><urgent/></location><location id="id7" x="-416" y="-448"><name x="-464" y="-480">CHECK_WRITE</name><urgent/></location><location id="id8" x="-128" y="-448"><name x="-138" y="-478">IDLE</name></location><init ref="id8"/><transition><source ref="id6"/><target ref="id5"/><label kind="guard" x="-40" y="-584">readData != check[rIdxControl]</label></transition><transition><source ref="id6"/><target ref="id8"/><label kind="guard" x="-104" y="-352">readData == check[rIdxControl]</label><label kind="assignment" x="-112" y="-328">rIdxControl = (rIdxControl + 1) % N</label><nail x="0" y="-352"/></transition><transition><source ref="id8"/><target ref="id6"/><label kind="synchronisation" x="-32" y="-440">readEvent?</label></transition><transition><source ref="id7"/><target ref="id8"/><label kind="assignment" x="-400" y="-560">wIdxControl = (wIdxControl + 1) % N</label><nail x="-272" y="-544"/></transition><transition><source ref="id8"/><target ref="id7"/><label kind="synchronisation" x="-320" y="-424">writeEvent?</label><label kind="assignment" x="-360" y="-440">check[wIdxControl] = tmpData</label></transition></template><system>// Place template instantiations here.
writer = Writer();
reader = Reader();
doggy = Watchdog();

// List one or more processes to be composed into a system.
system writer, reader, doggy;
</system></nta>